<html
    window-resizable="true"
    window-width="400dip"
    window-height="900dip"
>
<head>
<title>sciter components demo</title>
<style>

@import url(node_modules/sciter-fontawesome/src/fontawesome.css);
@import url(node_modules/sciter-logger/src/logger.css);

body {
    flow: vertical;
}

@mixin BORDER {
    border: 1dip solid gray;
}

body > * {
    @BORDER;
    border-top: none;

    padding: 0.5em;
}

body > *:first-child {
    @BORDER;
}

input[type="checkbox"] {
    margin-right: 0.4em;
}

label {
    vertical-align: middle;
}

hello {
    prototype: Hello url("src/hello.js");
    display: block;
}

checkbox {
    prototype: Checkbox url("src/checkbox.js");
    display: block;
}

widget {
    prototype: Widget url("src/widget.js");
    display: block;
    flow: horizontal;
}

widget > * {
    vertical-align: middle;
    margin-right: 0.5em;
}

widget:expanded h1 {
    font-size: 32dip;
}

counter {
    prototype: Counter url("src/counter.js");
    display: block;
}

search {
    prototype: Search url("src/search.js");
    display: block;
}

@import url(src/clock.css);
@import url(src/welcome.css);
@import url(src/groupbox.css);
@import url(node_modules/sciter-pagecontrol/src/pagecontrol.css);

div#controls {
    flow: horizontal;
    border-spacing: 0.5em;
    padding: 0.5em;
}

pagecontrol {
    size: *;
}

// custom skinning of fourth tabsheet
pagecontrol div#tabsheet-4 {
    background: cyan;
}

</style>
<script type="module">

import Logger from "node_modules/sciter-logger/src/logger.js";
import * as Utils from "node_modules/sciter-utils/src/utils.js";
import Simplest from "src/simplest.js";

// initialize logger
Logger.init();

// attach logger to console
Logger.attach();

// capture unhandled exceptions
Logger.capture();

document.on("ready", () => {
    // subscribe to logger messages
    Logger.plaintext(document.$("plaintext#logger"));

    // log sciter version
    console.debug(Utils.sciterInfo());

    // add support for F5 reload
    Utils.addReloadWindow();

    // close window on escape key press
    Utils.closeWindowOnEscape(Window.this);

    // center window on screen
    Utils.centerWindow(Window.this, "screen");

    // bring window to front and set input focus
    Window.this.activate(true);

    // add simplest component to interface
    document.$("div#simplest").content(<Simplest name="8ctopus" />);

    const pagecontrol = document.$("pagecontrol");

    document.on("click", "button#previous", () => {
        pagecontrol.previousTab();
    });

    document.on("click", "button#next", () => {
        pagecontrol.nextTab();
    });

    document.on("click", "button#toggle", () => {
        // show, hide pagecontrol header
        pagecontrol.toggleHeaders();
    });

    pagecontrol.showTab("tab-3");
});

</script>
</head>
<body>
    <div #simplest />

    <hello user="8ctopus" />

    <checkbox id="left" label="checkbox label" />

    <counter />

    <widget message="widget" />

    <clock debug />
    <search />
    <welcomegroup />
    <groupbox title="groupbox example">
        <checkbox label="choice 1" />
        <checkbox label="choice 2" />
    </groupbox>

    <div #controls>
        <button #previous>&lt;</button>
        <button #next>&gt;</button>
        <button #toggle>Show/hide headers</button>
    </div>
    <pagecontrol #p1 header="top">
        <tab title="first tab" icon="fas fa-star">
            <p> first tab content </p>
            <button> test </button>
        </tab>
        <tab title="second tab" icon="fas fa-bell" selected>
            <p> second tab content </p>
        </tab>
        <tab title="third tab">
            <p>
                third tab content <br />
                <b>some</b> literal <i>HTML</i>
            </p>
        </tab>
        <tab src="tab4.htm" title="fourth tab" icon="fas fa-star" />
        <tab src="tab5.htm" />
    </pagecontrol>
    <plaintext #logger readonly />
</body>
</html>
